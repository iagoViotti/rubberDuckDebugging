export const texts = {
  en: 'In software engineering, rubber duck debugging (or rubberducking) is a method of debugging code by articulating a problem in spoken or written natural language. The name is a reference to a story in the book "The Pragmatic Programmer" in which a programmer would carry around a rubber duck and debug their code by forcing themselves to explain it, line by line, to the duck. The idea is that by articulating the problem and explaining it step-by-step, the person can gain a clearer understanding of their own thought process and identify issues or gaps they might have missed. The object serves as a stand-in for a real listener, prompting the person to think critically about each aspect of the problem. This technique can help in clarifying thoughts and discovering solutions that may not be obvious otherwise.',
  pt: 'Na engenharia de software, rubber duck debugging (ou depuração com pato de borracha) é um método de depuração de código articulando um problema em linguagem natural falada ou escrita. O nome é uma referência a uma história no livro "The Pragmatic Programmer" em que um programador carregaria um pato de borracha e depuraria seu código forçando-se a explicá-lo, linha por linha, para o pato. A ideia é que, ao articular o problema e explicá-lo passo a passo, a pessoa pode obter uma compreensão mais clara de seu próprio processo de pensamento e identificar problemas ou lacunas que possam ter perdido. O objeto serve como substituto de um ouvinte real, incentivando a pessoa a pensar criticamente sobre cada aspecto do problema. Essa técnica pode ajudar a esclarecer pensamentos e descobrir soluções que podem não ser óbvias de outra forma.'
}